# name: 🚀 Build and deploy container app to Azure Function App 

# on:
#   push:
#     branches:
#       - y
#     paths:
#       - 'emails/**'
#       - 'subscriptions/**'

# jobs:
#   common-steps:
#     runs-on: 'ubuntu-latest'
#     outputs:
#       changed_directories: ${{ steps.determine_directories.outputs.changed_directories }}
#     steps:
#       - name: 📂 Checkout repository
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: 🔎 Determine modified directories
#         id: determine_directories
#         run: |
#           declare -A changed_dirs=()
#           for file in $(git diff --name-only HEAD^ HEAD); do
#             if [[ "$file" =~ ^emails/ || "$file" =~ ^subscriptions/ ]]; then
#               dir=$(dirname "$file")
#               changed_dirs["$dir"]=1
#             fi
#           done
#           # Filter out empty directories
#           non_empty_dirs=$(printf '%s\n' "${!changed_dirs[@]}" | grep -v '^$')
#           json_array=$(echo "$non_empty_dirs" | jq -R -s '[inputs]' 2>/dev/null)
#           echo "Changed directories: $json_array"
#           echo "::set-output name=changed_directories::$json_array"

#   build-and-deploy:
#     runs-on: 'ubuntu-latest'
#     needs: common-steps
#     strategy:
#       matrix:
#         directory: ${{fromJson(needs.common-steps.outputs.changed_directories)}}
#     steps:
#       - name: print-directory
#         run: |
#           echo "Directory: ${{ matrix.directory }}"

# דכגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגגג


# name: 🚀 Build and deploy container app to Azure Function App 

# on:
#   push:
#     branches:
#       - y
#     paths:
#       - 'emails/**'
#       - 'subscriptions/**'

# jobs:
#   common-steps:
#     runs-on: 'ubuntu-latest'
#     outputs:
#       changed_directories: ${{ steps.determine_directories.outputs.changed_directories }}
#     steps:
#       - name: 📂 Checkout repository
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: 🔎 Determine modified directories
#         id: determine_directories
#         run: |
#           declare -A changed_dirs=()
#           for file in $(git diff --name-only HEAD^ HEAD); do
#             if [[ "$file" =~ ^emails/ || "$file" =~ ^subscriptions/ ]]; then
#               dir=$(dirname "$file")
#               changed_dirs["$dir"]=1
#             fi
#           done
#           # Filter out empty directories
#           non_empty_dirs=$(printf '%s\n' "${!changed_dirs[@]}" | grep -v '^$')
#           echo "Changed directories: $non_empty_dirs"
#           echo "::set-output name=changed_directories::$non_empty_dirs"
      
#       - name: Debug changed directories
#         run: |
#           echo "Changed directories: ${{ steps.determine_directories.outputs.changed_directories }}"

#   build-and-deploy:
#     runs-on: 'ubuntu-latest'
#     needs: common-steps
#     strategy:
#       matrix:
#         directory: ${{fromJson(needs.common-steps.outputs.changed_directories)}}
#     steps:
#       - name: print-directory
#         run: |
#           echo "Directory: ${{ matrix.directory }}"

# גכככככככככככככככככככככככככככככככככככככככככככככככככככככככככככככככככככככככ

  # build-and-deploy:
  #   runs-on: 'ubuntu-latest'
  #   needs: common-steps
  #   strategy:
  #     matrix:
  #       directory: ${{fromJson(needs.common-steps.outputs.changed_directories)}}
  #   steps:
  #     - name: print-name
  #       run: |
  #         echo ${{matrix.directory}};
  #         exit 0


# name: 🚀 Build and deploy container app to Azure Function App 

# on:
#   push:
#     branches:
#       - y
#     paths:
#       - 'emails/**'
#       - 'subscriptions/**'

# jobs:
#    common-steps:
#     runs-on: 'ubuntu-latest'
#     outputs:
#       changed_directories: ${{ steps.determine_directories.outputs.changed_directories }}
#     steps:
#       - name: 📂 Checkout repository
#         uses: actions/checkout@v4
#         with:
#           fetch-depth: 0

#       - name: Get changed directories
#         id: changed_dirs
#         run: |
#           git diff-tree --no-commit-id --name-only -r ${{ github.sha }} > changed_files.txt
#           # השתמש בפקודה git diff-tree כדי לקבל את שמות הקבצים ששונו ב-commit האחרון
#           # הפלט יורד לקובץ changed_files.txt

#       - name: Filter directories
#         id: filter_dirs
#         run: |
#           echo "::set-output name=directories::$(awk -F'/' '{print $1}' changed_files.txt | sort -u)"
#           # פקודה זו תפרק את הנתיבים לתיקיות ותסנן אותן כך שכל תיקייה תופיע רק פעם אחת

#       - name: Display JSON output
#         run: |
#           echo '{"directories":['${{ steps.filter_dirs.outputs.directories }}']}' > directories.json
#           # ייצור קובץ JSON בפורמט המבוקש

#       - name: Save JSON output
#         uses: actions/upload-artifact@v2
#         with:
#           name: changed_directories
#           path: directories.json


  # build-and-deploy:
  #   runs-on: 'ubuntu-latest'
  #   needs: common-steps
  #   strategy:
  #     matrix:
  #       directory: ${{fromJson(needs.common-steps.outputs.changed_directories)}}
  #   steps:
  #     - name: print-directory
  #       run: |
  #         echo "Directory: ${{ matrix.directory }}"
    # build-and-deploy:
    #   runs-on: 'ubuntu-latest'
    #   needs: common-steps
    #   steps:
    #     - name: Get changed directories
    #       id: changed_dirs_check
          # run: echo "Changed directories: ${{ needs.common-steps.outputs.changed_directories }}"

    #     - name: Check if changed directories exist
    #       run: |
    #         if [[ -z "${{ needs.common-steps.outputs.changed_directories }}" ]]; then
    #           echo "No changed directories found"
    #           exit 1
    #         fi

    #     - name: Deploy if directories changed
    #       run: |
    #         # Add here the desired actions if directories have changed


name: 🚀 Build and deploy container app to Azure Function App 

on:
  push:
    branches:
      - main
    paths:
      - 'emails/**'
      - 'subscriptions/**'

jobs:
  common-steps:
    runs-on: 'ubuntu-latest'
    outputs:
      changed_directories: ${{ steps.determine_directories.outputs.changed_directories }}
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔎 Determine modified directory
        id: determine_directories
        run: |   
          changed_files=$(git diff --name-only HEAD^ HEAD)
          paths=(
            'emails'
            'subscriptions'
          )
          declare -a changed_dirs=()
          for file in $changed_files; do
            for path in "${paths[@]}"; do
              # Check if the file path matches the specified directories and extract the first level directory
              if [[ "$file" =~ ^$path/[^/]+ ]]; then
                dir=$(echo "$file" | cut -d'/' -f1,2)
                # Check if the directory is not already in the array
                if [[ ! " ${changed_dirs[@]} " =~ " ${dir} " ]]; then
                  changed_dirs+=("$dir")
                fi
              fi
            done
          done
          json_array=$(printf '"%s"\n' "${changed_dirs[@]}")
          echo "Changed directories: $json_array"
          echo "::set-output name=changed_directories::[$json_array]"
  build-and-deploy:
    runs-on: 'ubuntu-latest'
    needs: common-steps
    strategy:
      matrix:
        directory: ${{fromJson(needs.common-steps.outputs.changed_directories)}}
    
    steps:
      - name: print-name
        run:
          echo ${{matrix.directory}};
          exit 0