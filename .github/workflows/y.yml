# name: Build and deploy a container to an Azure Web App

# env:
#   AZURE_WEBAPP_NAME: directory5  

# on:
#   push:
#     branches:
#       - main

# permissions:
#   contents: 'read'
#   packages: 'write'

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2

#       - name: Log in to GitHub container registry
#         uses: docker/login-action@v2
#         with:
#           registry: ghcr.io
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Lowercase the repo name
#         run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

#       - name: Build and push container image to registry
#         uses: docker/build-push-action@v4
#         with:
#           push: true
#           tags: ghcr.io/${{ env.REPO }}:${{ github.sha }}
#           file: ./Dockerfile

#   deploy:
#     runs-on: ubuntu-latest

#     needs: build

#     environment:
#       name: 'production'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

#     steps:
#       - name: Lowercase the repo name
#         run: echo "REPO=${GITHUB_REPOSITORY,,}" >>${GITHUB_ENV}

#       - name: Deploy to Azure Web App
#         id: deploy-to-webapp
#         uses: azure/webapps-deploy@85270a1854658d167ab239bce43949edb336fa7c
#         with:
#           app-name: ${{ env.AZURE_WEBAPP_NAME }}
#           publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
#           images: 'ghcr.io/${{ env.REPO }}:${{ github.sha }}'
name: Build and deploy container app to Azure Functions - directory5

on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        directory:
          - directory5

    steps:
      - name: üìÇ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: üîé Determine modified directory
        id: determine_directory
        run: |
          git diff --name-only HEAD~1 ${{ github.sha }} > changes.txt
          if grep -q '^${{ matrix.directory }}/' changes.txt; then
            echo "${{ matrix.directory }} has changes"
            echo "::set-output name=directory::${{ matrix.directory }}"
          else
            echo "No changes in ${{ matrix.directory }}"
            exit 0
          fi
      - name: Log in to container registry
        uses: docker/login-action@v2
        with:
          registry: https://ghcr.io/
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          # username: ${{ secrets.AzureAppService_ContainerUsername_e121809fd6b64de18430804887ab45de }}
          # password: ${{ secrets.AzureAppService_ContainerPassword_7c94f71f43f443eeb172285de2ad6c33 }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ghcr.io/${{ secrets.AzureAppService_ContainerUsername_e121809fd6b64de18430804887ab45de }}/ghcr.io/leahlandau/try-directory5:${{ github.sha }}
          file: ./Dockerfile
        if: steps.determine_directory.outputs.directory == '${{ matrix.directory }}'

      - name: üîñ Get release tag name
        id: get_release
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          latest: true
        if: steps.determine_directory.outputs.directory == '${{ matrix.directory }}'

      - name: ‚ôªÔ∏è Set correct environment
        run: |
          TAG=${{ steps.get_release.outputs.tag_name }}
          echo "TAG=$TAG" >> "$GITHUB_ENV"
        if: steps.determine_directory.outputs.directory == '${{ matrix.directory }}'

      - name: üê≥ Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/leahlandau/try-${{ matrix.directory }}
          tags: |
            type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{ env.TAG }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.TAG }}
            type=semver,pattern={{major}},value=${{ env.TAG }}
        if: steps.determine_directory.outputs.directory == '${{ matrix.directory }}'

    deploy:
      runs-on: ubuntu-latest
      needs: build
      environment:
        name: 'production'
        url: ${{ steps.deploy-to-functions.outputs.functions-url }}

      steps:
        - name: Deploy to Azure Functions
          id: deploy-to-functions
          uses: azure/functions-deploy@v2
          with:
            app-name: 'directory5'
            slot-name: 'production'
            publish-profile: ${{ secrets.AzureAppService_PublishProfile_29beba57dfe34870be28bbafbc822dd0 }}
            images: 'ghcr.io/${{ secrets.AzureAppService_ContainerUsername_e121809fd6b64de18430804887ab45de }}/ghcr.io/leahlandau/try-directory5:${{ github.sha }}'