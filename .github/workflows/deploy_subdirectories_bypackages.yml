name: ðŸš€ Publish Directories

on:
  push:
    branches: ['main']

  workflow_dispatch:

env:
  # AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' 
  PYTHON_VERSION: '3.11' 

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-function.outputs.webapp-url }}
    strategy:
      matrix:
        directory:
          - directory10
          - directory11

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0


      # - name: ðŸ”Ž Determine modified directory
      #   id: determine_directory
      #   run: |
      #     git diff --name-only HEAD~1 ${{ github.sha }} > changes.txt
      #     if grep -q '^${{ matrix.directory }}/' changes.txt; then
      #       echo "${{ matrix.directory }} has changes"
      #       # echo "::set-output name=directory::${{ matrix.directory }}"
      #       DIRECTORY=${{ matrix.directory }}
      #       echo "DIRECTORY=$DIRECTORY" >> "$GITHUB_ENV"

      #     else
      #       echo "No changes in ${{ matrix.directory }}"
      #       exit 0
      #     fi
      - name: ðŸ”Ž Determine modified directory
        id: determine_directory
        run: |
         git diff --name-only HEAD~1 ${{ github.sha }} > changes.txt
         if grep -q '^${{ matrix.directory }}/' changes.txt; then
           echo "${{ matrix.directory }} has changes"
           echo "::set-output name=directory::${{ matrix.directory }}"
         else
           echo "No changes in ${{ matrix.directory }}"
           exit 0
         fi
      

      - name: Setup Python version
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
        # if: ${{ env.DIRECTORY }}== matrix.directory
        if: steps.determine_directory.outputs.directory == matrix.directory


      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
        # if: ${{ env.DIRECTORY }} == matrix.directory
        if: steps.determine_directory.outputs.directory == matrix.directory

      - name: Install dependencies
        run: pip install -r requirements.txt
        # if: ${{ env.DIRECTORY }} == matrix.directory
        if: steps.determine_directory.outputs.directory == matrix.directory

      # Optional: Add step to run tests here

      - name: Zip artifact for deployment
        run: zip ${{ matrix.directory }}.zip ./${{ matrix.directory }} -r
        # if: ${{ env.DIRECTORY }} == matrix.directory
        if: steps.determine_directory.outputs.directory == matrix.directory

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            release.zip
            !venv/
        # if: ${{ env.DIRECTORY }} == matrix.directory
        if: steps.determine_directory.outputs.directory == matrix.directory

  # deploy:
    # runs-on: ubuntu-latest
    # strategy:
    #       matrix:
    #         directory:
    #           - directory10
    #           - directory11
    # needs: build
    # environment:
    #   name: 'Production'
    #   url: ${{ steps.deploy-to-function.outputs.webapp-url }}
    
    # steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: python-app
        # if: ${{ env.DIRECTORY }} == matrix.directory
        if: steps.determine_directory.outputs.directory == matrix.directory

      - name: Unzip artifact for deployment
        run: unzip release.zip
        # if: ${{ env.DIRECTORY }} == matrix.directory
        if: steps.determine_directory.outputs.directory == matrix.directory
        
      - name: Azure Login
        run: az login 
        if: steps.determine_directory.outputs.directory == matrix.directory 

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: ${{ secrets[format('AZURE_APP_NAME_{0}', matrix.directory)] || '' }}
          slot-name: 'Production'
          # package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
          package: ${{ github.workspace }}/${{ matrix.directory }}/
          publish-profile: ${{ secrets[format('AZURE_FUNCTIONAPP_PUBLISH_PROFILE_{0}', matrix.directory)] || '' }}
          # publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_A4FEA5A5E9E249ECBABA68D90AFED0DE }}
          scm-do-build-during-deployment: true
          enable-oryx-build: true
        # if: ${{ env.DIRECTORY }} == matrix.directory
        if: steps.determine_directory.outputs.directory == matrix.directory

